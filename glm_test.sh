#!/bin/bash
set -x

echo "auto-generated by afni_proc.py, Fri Jan  9 12:09:20 2015"
echo "(version 4.03, September 19, 2013)"
echo "execution started: `date`"

# bash glm_all.sh SUBJ 2>&1 | tee output.glm.log
# run the regression analysis

subj=$1
glm_id=all # modifier to identify which glm

file_dir="/data/Pri_quad/$subj/glm"
data_dir=$file_dir/data
data_preproc_dir=$file_dir/data_preproc
stim_dir=$file_dir/glm_$glm_id/txtfiles

output_dir=$file_dir/glm_$glm_id/${subj}.glmResults
#verify that the results directory does not yet exist
if [ -d $output_dir ]
then
    echo output dir "${subj}.glmResults" already exists
	timestmp=$(date +"%T")
    output_dir=$file_dir/glm_$glm_id/${subj}.glmResults.${timestmp}
	echo "output_dir: $output_dir"
fi

# create results and stimuli directories
mkdir $output_dir


cd $output_dir
3dcopy $data_preproc_dir/brainMask.nii brainMask.nii
inputRuns=$data_preproc_dir/scaled_*.r*.nii.gz

3dDeconvolve -input $inputRuns  \
    -censor $data_preproc_dir/outcount_${subj}*_censor.1D \
    -polort 3 \
	-mask brainMask.nii \
    -num_stimts 12 \
	-stim_times 1 $stim_dir/cuestim_easy.txt 'GAM(8.6,0.547,1.5)' -stim_label 1 Ecue \
    -stim_times 2 $stim_dir/cuestim_hard.txt 'GAM(8.6,0.547,1.5)' -stim_label 2 Hcue \
	-stim_times 3 $stim_dir/delay_easy.txt 'GAM(8.6,0.547,12.0)' -stim_label 3 Edelay \
	-stim_times 4 $stim_dir/delay_hard.txt 'GAM(8.6,0.547,12.0)' -stim_label 4 Hdelay \
	-stim_times 5 $stim_dir/resp_easy.txt 'GAM(8.6,0.547,0.8)' -stim_label 5 Eresp \
    -stim_times 6 $stim_dir/resp_hard.txt 'GAM(8.6,0.547,0.8)' -stim_label 6 Hresp \
    -stim_file 7 $data_preproc_dir/motion_demean.1D'[0]' -stim_base 7 -stim_label 7 roll \
	-stim_file 8 $data_preproc_dir/motion_demean.1D'[1]' -stim_base 8 -stim_label 8 pitch \
	-stim_file 9 $data_preproc_dir/motion_demean.1D'[2]' -stim_base 9 -stim_label 9 yaw \
	-stim_file 10 $data_preproc_dir/motion_demean.1D'[3]' -stim_base 10 -stim_label 10 dS \
	-stim_file 11 $data_preproc_dir/motion_demean.1D'[4]' -stim_base 11 -stim_label 11 dL \
	-stim_file 12 $data_preproc_dir/motion_demean.1D'[5]' -stim_base 12 -stim_label 12 dP \
	
    -GOFORIT 80 \
	-allzero_OK \
	-jobs 3 \
	-x1D X.xmat.1D -xjpeg X.jpg \
	-x1D_uncensored X.nocensor.xmat.1D \
	-fitts fitts.${subj} \
	-errts errts.${subj} \
	-rout -tout -bucket stats.${subj}


	# display any large pairwise correlations from the X-matrix
	1d_tool.py -show_cormat_warnings -infile X.xmat.1D  |& tee out.cormat_warn.txt

	# create an all_runs dataset to match the fitts, errts, etc.
	3dTcat -prefix all_runs.${subj}.nii.gz  $inputRuns 
	
	######### # ================== auto block: generate review scripts ===================
	#########
	######### # generate a review script for the unprocessed EPI data
	######### gen_epi_review.py -script @epi_review.${subj} \
	#########     -dsets ${subj}_r*.tcat+orig.HEAD
	#########
	######### #generate scripts to review single subject results
	######### #(try with defaults, but do not allow bad exit status)
	######### gen_ss_review_scripts.py -out_limit 0.15 -motion_dset dfile_rall.1D -exit0

	# ========================== auto block: finalize ==========================

	# remove temporary files
	\rm -f rm.*
	# \rm -f $data_preproc_dir/rm.*
	
	# convert BRIKs to niftis
    for blah in errts fitts stats
    do
        filestart="${blah}.${subj}"
        3dcopy ${filestart}+orig.BRIK ${filestart}.nii.gz
        rm ${filestart}+orig.BRIK
        rm ${filestart}+orig.HEAD
    done

	
	
	#########
	######### # if the basic subject review script is here, run it
	######### # (want this to be the last text output)
	######### if [ -e @ss_review_basic ]
	######### then
	######### 	./@ss_review_basic |& tee out.ss_review.${subj}.txt
	######### fi


	echo "execution finished: `date`"

	### TO DO:
	# 1- during pereproc, first convert all epi and blips to rai and then run preproc. 
	# 2- copy and then remove the epi files (both pb02.volreg and pb00.tcat).
